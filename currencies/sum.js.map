{
  "version": 3,
  "file": "sum.js",
  "sourceRoot": "",
  "sources": [
    "sum.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class SUM\n  constructor: ->\n    @ws = null\n    @socketUrl = \"wss://insight.sumcore.org/socket.io/?EIO=3&transport=websocket\"\n    @txApi = \"https://insight.sumcore.org/api/tx/\"\n    @blockApi = \"https://insight.sumcore.org/api/block/\"\n    @txFees = [0.000224, 0.0005]\n    @txFeeTimestamp = 0\n    @txFeeInterval = 3000 # how often to query for a fee\n    @donationAddress = \"LiVcWyeoPXNYekcdFkDr64QLG3u9G8BgLs\"\n\n  start: (txCb, blockCb) ->\n    @stop() if @ws\n    @ws = new WebSocket @socketUrl\n\n    @ws.onclose = =>\n      setTimeout (=> @start txCb, blockCb), 1000\n\n    @ws.onopen = =>\n      @ws.send '2probe'\n      @ws.send '5'\n      @ws.send '420[\"subscribe\",\"sync\"]'\n      @ws.send '421[\"subscribe\",\"inv\"]'\n      @ws.send '422[\"subscribe\",\"sync\"]'\n      @ws.send '424[\"subscribe\",\"sync\"]'\n      @ws.send '425[\"subscribe\",\"inv\"]'\n      @ping = setInterval (=> @ws.send '2'), 25*1000\n\n    @ws.onmessage = ({data}) =>\n      data = data.match /^\\d+(\\[.+?)$/\n      if data\n        [type, payload] = JSON.parse(data[1])\n        if type is 'tx'\n          # fetch fees every now and then\n          if new Date().getTime() - @txFeeInterval > @txFeeTimestamp\n            $.get @txApi + payload.txid, ({fees}) =>\n              if fees\n                @txFees.shift()\n                @txFees.push(fees)\n                @txFeeTimestamp = new Date().getTime()\n\n          txCb? {\n            amount: payload.valueOut\n            fee: Math.random() * Math.abs(@txFees[0] - @txFees[1]) + Math.min.apply(0, @txFees)\n            link: 'https://insight.sumcore.org/tx/' + payload.txid\n            donation: !!payload.vout.find (vout) => Object.keys(vout)[0] is @donationAddress\n          }\n        else\n          $.get @blockApi + payload, ({tx}) =>\n            blockCb? count: if tx then tx.length else 0\n          \n  stop: ->\n    @ws.close()\n    clearInterval @ping\n    @ws = null\n"
  ]
}
