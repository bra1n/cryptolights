{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "",
  "sources": [
    "main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "currencies =\n  btc: new BTC()\n  eth: new ETH()\n  ltc: new LTC()\n  xrp: new XRP()\n  nano: new NANO()\nprices = {}\nstats = {}\n\ncurrencyFormat =\n  style: 'currency'\n  currency: 'USD'\n  minimumFractionDigits: 0\n  maximumFractionDigits:0\n\n# render TX\nshowTx = (engine, currency, tx) ->\n  value = tx.amount * (prices[currency] or 1)\n  fee = tx.fee * (prices[currency] or 1)\n\n  engine.addMeteor\n    speed: if fee then 2 + 4 * Math.min(2, Math.log10(1+fee))/2 else 6\n    hue: if value then 220 - 220 * Math.min(6, Math.log10(1+value))/6 else 220\n    thickness: Math.max(5, Math.log10(1+value) * 10)\n    length: Math.min(3, Math.log10(1 + fee))/3 * 250\n    link: tx.link\n    donation: tx.donation\n\n  updateStats currency, value, fee\n\n# render block\nshowBlock = (engine, currency, block) ->\n  engine.addBlock Math.min(250, block.count / 4)\n  stats[currency].count = Math.max(0, stats[currency].count - block.count) if stats[currency]?\n\n# get current price\nupdatePrices = (currencies) ->\n  currencyAPI = 'https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms='\n  $.get currencyAPI + currencies.join(',').toUpperCase(), (data) ->\n    if data\n      for currency, price of data\n        currency = currency.toLowerCase()\n        prices[currency] = Math.round(1/price*100)/100\n        $(\".#{currency} .price\").text prices[currency].toLocaleString(undefined, { style: 'currency', currency: 'USD' })\n\n  marketcapAPI = 'https://api.coinlore.com/api/global/'\n  $.get marketcapAPI, (data) ->\n    if data\n      $(\".marketcap\").text JSON.parse(data)[0].total_mcap.toLocaleString(undefined, currencyFormat)\n\n\n  setTimeout updatePrices.bind(null, currencies), 10*1000\n\n# update stats for a currency, called whenever there is a new TX\n# to do that, keep a log of the last 60 seconds of tx\nupdateStats = (currency, value = 0, fee = 0) ->\n  stats[currency] = {last: [], count: 0} unless stats[currency]?\n  # increase number of unverified TX\n  stats[currency].count++ unless currencies[currency].noBlocks\n  # calculate stats for last 60s\n  last = stats[currency].last\n  timestamp = new Date().getTime()\n  last.push {timestamp, value, fee}\n  i = last.length\n  last.splice(i, 1) while i-- when timestamp - last[i].timestamp > 60*1000\n  duration = Math.max(last[last.length - 1].timestamp - last[0].timestamp, 1) / 1000\n  txPerSecond = Math.round(last.length / duration * 10)/10\n  #valuePerSecond = Math.round(stat.reduce(((a, b) -> a + b.value), 0) / duration)\n  valuePerTx = Math.round(last.reduce(((a, b) -> a + b.value), 0) / last.length)\n  #feePerSecond = Math.round(stat.reduce(((a, b) -> a + b.fee), 0) / duration * 100)/100\n  feePerTx = Math.round(last.reduce(((a, b) -> a + b.fee), 0) / last.length * 100)/100\n  $(\".#{currency} .stats\").text \"\"\"\n    #{txPerSecond.toLocaleString()} tx/s (#{stats[currency].count} unconfirmed)\n    #{valuePerTx.toLocaleString(undefined, currencyFormat)} value/tx\n    #{feePerTx.toLocaleString(undefined, { style: 'currency', currency: 'USD' })} fee/tx\n  \"\"\"\n\n# set up a lane\ninitialize = (currency) ->\n  if currencies[currency]? and $(\".#{currency}\")\n    container = $(\".#{currency}\")\n    container.css 'background-image', \"url('img/#{currency}.png')\"\n    container.find(\"canvas\").remove()\n    canvas = $ '<canvas></canvas>'\n    container.append canvas\n    engine = new CanvasRenderer canvas.get(0)\n    canvas.data 'engine', engine\n    engine.start() if container.is ':visible'\n    currencies[currency].start showTx.bind(null, engine, currency), showBlock.bind(null, engine, currency)\n\n    # donation links\n    if currencies[currency].donationAddress\n      container.find('.donate').on 'click', =>\n        $('.overlay .donation').show().siblings().hide()\n        $('.overlay').fadeToggle()\n          .find('.address').text currencies[currency].donationAddress\n          .end().find('.donation img').attr 'src', \"img/#{currency}-qr.png\"\n    else\n      container.find('.donate').remove()\n\n# update lane rendering (for resizing and lane toggling\nupdateLanes = ->\n  $(\".currencies > div\").each ->\n    container = $(@)\n    engine = container.find('canvas').data 'engine'\n    if container.is ':visible'\n      engine.resize container.find('canvas').get(0)\n      engine.start()\n    else\n      engine.stop()\n\nshowHelp = ->\n  $('.overlay .help').show().siblings().hide()\n  $('.overlay').fadeIn()\n\n# start everything\n$ ->\n  # load prices\n  updatePrices Object.keys(currencies)\n  # set up overlay\n  $('.overlay').on 'click', (e) ->\n    if $('.overlay .help').is(':visible') # don't show help at the beginning after closing\n      document.cookie = \"nohelp=true; expires=#{new Date(Date.now()+1000*60*60*24*365).toString()}; path=/\"\n    $(this).fadeOut() if $(e.target).is('.overlay, .help')\n  $('.overlay').hide() if !!document.cookie.match(/nohelp/) or !!location.hash.match(/nohelp/i)\n  $('nav').hide() if !!location.hash.match(/nohelp/i)\n  # initialize coins\n  $('.currencies > div').each -> initialize $(@).attr 'class'\n  # listen to resizing\n  $(window).resize updateLanes\n  # set up nav\n  $ 'nav'\n  .on 'click', '.help', showHelp\n  .on 'click', '.right', ->\n    $(\".currencies\").append($(\".currencies > div\").first())\n    updateLanes()\n  .on 'click', '.left', ->\n    $(\".currencies\").prepend($(\".currencies > div\").last())\n    updateLanes()\n"
  ]
}
